
name: backend
on:
  push:
    branches:
      - main
 
jobs:
  Lint_Job:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  

      - name: Install pipenv
        run: |
           cd starter/backend
           python -m pip install --upgrade pip
           pip install pipenv
           pipenv install --dev     
        
      - name: flake8 Lint
        id: lint
        run: cd starter/backend &&  pipenv run flake8 --max-line-length=120
        continue-on-error: false
        
      

  TEST_JOB: 
   runs-on: ubuntu-latest
      
   steps:
     - name: Check out source repository
       uses: actions/checkout@v3 

     - name: Set up Python environment
       uses: actions/setup-python@v4
       with:
          python-version: "3.10"

     - name: Install pipenv
       run: |
           cd starter/backend
           python -m pip install --upgrade pip
           pip install pipenv 
           pipenv install --dev
       
     - name: Run tests
       run: cd starter/backend && pipenv run pytest --maxfail=1 --disable-warnings -q 
          
  BUILD_JOB: 
    runs-on: ubuntu-latest
    needs: [Lint_Job, TEST_JOB]
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"      
    
      - name: Build Docker Image	  
        run: |
          cd starter/backend
          IMAGE_TAG="${{ secrets.AWS_ECR_REPOSITORY_Backend  }}:${{ github.sha }}"
          IMAGE_TAG_LOWERCASE=$(echo $IMAGE_TAG | tr '[:upper:]' '[:lower:]')
          docker build -t "$IMAGE_TAG_LOWERCASE" -f Dockerfile .
          docker tag "$IMAGE_TAG_LOWERCASE" "${{ secrets.AWS_ECR_REPOSITORY_Backend }}:latest".     
    
     
    
